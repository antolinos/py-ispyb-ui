{"ast":null,"code":"var _jsxFileName = \"/home/ale/Software/workspaces/ispyb/py-ispyb-ui/src/components/login/loginform.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Alert, Button, FormControl, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport UI from '../../config/ui';\nimport ErrorUserMessage from '../usermessages/errorusermessage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doSignIn } from '../../redux/actions/user';\nimport { useForm } from 'react-hook-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(props) {\n  _s();\n\n  const {\n    plugin\n  } = props;\n  const user = useSelector(state => state.user);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"tab-panel-fix\",\n    style: {\n      padding: '20px 0 '\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LoginForm, \"MPLRtz6RzhNZ2VUv+hXEdeKCVXg=\", false, function () {\n  return [useSelector, useForm, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n/*\n <Card className=\"tab-panel-fix\" style={{ padding: '20px 0 ' }}>\n      <form\n        className=\"container-fluid\"\n        onSubmit={handleSubmit((data) => {\n          dispatch(doSignIn(plugin, data.username, data.password));\n        })}\n      >\n        {UI.loginForm.header && (\n          <p className=\"text-info\" style={{ textAlign: 'left' }}>\n            {UI.loginForm.header}\n          </p>\n        )}\n        {user.error && <ErrorUserMessage text={user.error} />}\n        {user.isSessionExpired && <Alert bsStyle=\"warning\">Session expired</Alert>}\n\n        <FormGroup controlId=\"username\">\n          <FormLabel>{UI.loginForm.usernameLabel}</FormLabel>\n          <FormControl inputRef={register({ required: true })} type=\"text\" name=\"username\" autoFocus required />\n        </FormGroup>\n\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl inputRef={register({ required: true })} type=\"password\" name=\"password\" required />\n        </FormGroup>\n\n        <Button style={{ marginTop: 5, width: '100%' }} type=\"submit\" bsStyle=\"primary\">\n          <FontAwesomeIcon icon={faCoffee} style={{ marginRight: 10 }} />\n          {user.isAuthenticating ? 'Signing in...' : 'Sign in'}\n        </Button>\n      </form>\n    </Card>\n    */\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ale/Software/workspaces/ispyb/py-ispyb-ui/src/components/login/loginform.js"],"names":["React","Alert","Button","FormControl","Card","FormGroup","FormLabel","UI","ErrorUserMessage","useSelector","useDispatch","doSignIn","useForm","FontAwesomeIcon","faCoffee","LoginForm","props","plugin","user","state","register","handleSubmit","dispatch","padding"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,IAArC,EAA2CC,SAA3C,EAAsDC,SAAtD,QAAuE,iBAAvE;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,mCAAzB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAME,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BT,OAAO,EAA1C;AACA,QAAMU,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,sBAAO,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,KAAK,EAAE;AAAEa,MAAAA,OAAO,EAAE;AAAX;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GARQR,S;UAEMN,W,EAEsBG,O,EAClBF,W;;;KALVK,S;AAUT,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Alert, Button, FormControl, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport UI from '../../config/ui';\nimport ErrorUserMessage from '../usermessages/errorusermessage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doSignIn } from '../../redux/actions/user';\nimport { useForm } from 'react-hook-form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\n\nfunction LoginForm(props) {\n  const { plugin } = props;\n  const user = useSelector((state) => state.user);\n\n  const { register, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n\n  return <Card className=\"tab-panel-fix\" style={{ padding: '20px 0 ' }}></Card>;\n}\n\nexport default LoginForm;\n\n/*\n <Card className=\"tab-panel-fix\" style={{ padding: '20px 0 ' }}>\n      <form\n        className=\"container-fluid\"\n        onSubmit={handleSubmit((data) => {\n          dispatch(doSignIn(plugin, data.username, data.password));\n        })}\n      >\n        {UI.loginForm.header && (\n          <p className=\"text-info\" style={{ textAlign: 'left' }}>\n            {UI.loginForm.header}\n          </p>\n        )}\n        {user.error && <ErrorUserMessage text={user.error} />}\n        {user.isSessionExpired && <Alert bsStyle=\"warning\">Session expired</Alert>}\n\n        <FormGroup controlId=\"username\">\n          <FormLabel>{UI.loginForm.usernameLabel}</FormLabel>\n          <FormControl inputRef={register({ required: true })} type=\"text\" name=\"username\" autoFocus required />\n        </FormGroup>\n\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl inputRef={register({ required: true })} type=\"password\" name=\"password\" required />\n        </FormGroup>\n\n        <Button style={{ marginTop: 5, width: '100%' }} type=\"submit\" bsStyle=\"primary\">\n          <FontAwesomeIcon icon={faCoffee} style={{ marginRight: 10 }} />\n          {user.isAuthenticating ? 'Signing in...' : 'Sign in'}\n        </Button>\n      </form>\n    </Card>\n    */\n"]},"metadata":{},"sourceType":"module"}
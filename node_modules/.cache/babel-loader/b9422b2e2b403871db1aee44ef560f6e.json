{"ast":null,"code":"import { LOGGED_IN, LOGIN_ERROR, LOG_IN, LOG_OUT } from \"../constants/actionTypes\";\nconst initialState = {\n  username: null,\n  roles: null,\n  token: null\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        state = { ...initialState,\n          username: action.username,\n          isSSO: action.username === null,\n          isAuthenticating: true\n        };\n        break;\n      }\n\n    case LOGGED_IN:\n      {\n        state = { ...initialState,\n          username: state.username,\n          token: action.token,\n          roles: action.roles\n        };\n        break;\n      }\n\n    case LOG_OUT:\n      {\n        state = { ...initialState,\n          isSessionExpired: action.expired\n        };\n        break;\n      }\n\n    case LOGIN_ERROR:\n      {\n        state = { ...initialState,\n          error: action.error\n        };\n        break;\n      }\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default user;","map":{"version":3,"sources":["/home/ale/Software/workspaces/ispyb/py-ispyb-ui/src/redux/reducers/user.js"],"names":["LOGGED_IN","LOGIN_ERROR","LOG_IN","LOG_OUT","initialState","username","roles","token","user","state","action","type","isSSO","isAuthenticating","isSessionExpired","expired","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,EAAyCC,OAAzC,QAAwD,0BAAxD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,IAAI,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,MAAL;AAAa;AACXO,QAAAA,KAAK,GAAG,EACN,GAAGL,YADG;AAENC,UAAAA,QAAQ,EAAEK,MAAM,CAACL,QAFX;AAGNO,UAAAA,KAAK,EAAEF,MAAM,CAACL,QAAP,KAAoB,IAHrB;AAINQ,UAAAA,gBAAgB,EAAE;AAJZ,SAAR;AAMA;AACD;;AACD,SAAKb,SAAL;AAAgB;AACdS,QAAAA,KAAK,GAAG,EACN,GAAGL,YADG;AAENC,UAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAFV;AAGNE,UAAAA,KAAK,EAAEG,MAAM,CAACH,KAHR;AAIND,UAAAA,KAAK,EAAEI,MAAM,CAACJ;AAJR,SAAR;AAMA;AACD;;AACD,SAAKH,OAAL;AAAc;AACZM,QAAAA,KAAK,GAAG,EAAE,GAAGL,YAAL;AAAmBU,UAAAA,gBAAgB,EAAEJ,MAAM,CAACK;AAA5C,SAAR;AACA;AACD;;AACD,SAAKd,WAAL;AAAkB;AAChBQ,QAAAA,KAAK,GAAG,EAAE,GAAGL,YAAL;AAAmBY,UAAAA,KAAK,EAAEN,MAAM,CAACM;AAAjC,SAAR;AACA;AACD;;AACD;AACE;AA5BJ;;AA8BA,SAAOP,KAAP;AACD,CAhCD;;AAkCA,eAAeD,IAAf","sourcesContent":["import { LOGGED_IN, LOGIN_ERROR, LOG_IN, LOG_OUT } from \"../constants/actionTypes\";\n\nconst initialState = {\n  username: null,\n  roles: null,\n  token: null,\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN: {\n      state = {\n        ...initialState,\n        username: action.username,\n        isSSO: action.username === null,\n        isAuthenticating: true,\n      };\n      break;\n    }\n    case LOGGED_IN: {\n      state = {\n        ...initialState,\n        username: state.username,\n        token: action.token,\n        roles: action.roles,\n      };\n      break;\n    }\n    case LOG_OUT: {\n      state = { ...initialState, isSessionExpired: action.expired };\n      break;\n    }\n    case LOGIN_ERROR: {\n      state = { ...initialState, error: action.error };\n      break;\n    }\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}
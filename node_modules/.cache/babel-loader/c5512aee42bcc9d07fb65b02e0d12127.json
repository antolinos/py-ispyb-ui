{"ast":null,"code":"var _jsxFileName = \"/home/ale/Software/workspaces/ispyb/py-ispyb-ui/src/components/login/logintabs.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Tab, Tabs } from 'react-bootstrap'; //import SSO from \"./SSO\";\n\nimport LoginForm from './loginform';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginTabs() {\n  _s();\n\n  const site = useSelector(state => state.site);\n  const user = useSelector(state => state.user);\n\n  if (!site.authentication) {\n    return 'To be implemented: select a site';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    id: \"login-tabs\",\n    children: [site.authentication.sso.enabled !== 'false' && /*#__PURE__*/_jsxDEV(Tab, {\n      eventKey: \"sso\",\n      title: \"SSO\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        body: true,\n        children: \"SSo should be displayed here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), site.authentication.authenticators.filter(a => !a.hidden).map(authenticator => /*#__PURE__*/_jsxDEV(Tab, {\n      eventKey: authenticator.plugin,\n      title: authenticator.title,\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        plugin: authenticator.plugin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, authenticator.plugin, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginTabs, \"TbjgIbjlLzGT+v5m9IF5gJ4FyIQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = LoginTabs;\nexport default LoginTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginTabs\");","map":{"version":3,"sources":["/home/ale/Software/workspaces/ispyb/py-ispyb-ui/src/components/login/logintabs.js"],"names":["React","Card","Tab","Tabs","LoginForm","useSelector","LoginTabs","site","state","user","authentication","sso","enabled","authenticators","filter","a","hidden","map","authenticator","plugin","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,QAAgC,iBAAhC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,IAAI,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,IAAI,GAAGJ,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;;AAEA,MAAI,CAACF,IAAI,CAACG,cAAV,EAA0B;AACxB,WAAO,kCAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA,eACGH,IAAI,CAACG,cAAL,CAAoBC,GAApB,CAAwBC,OAAxB,KAAoC,OAApC,iBACC,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,KAAd;AAAoB,MAAA,KAAK,EAAC,KAA1B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMGL,IAAI,CAACG,cAAL,CAAoBG,cAApB,CACEC,MADF,CACUC,CAAD,IAAO,CAACA,CAAC,CAACC,MADnB,EAEEC,GAFF,CAEOC,aAAD,iBACH,QAAC,GAAD;AAAgC,MAAA,QAAQ,EAAEA,aAAa,CAACC,MAAxD;AAAgE,MAAA,KAAK,EAAED,aAAa,CAACE,KAArF;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEF,aAAa,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF,OAAUD,aAAa,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA,YAHH,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAxBQb,S;UACMD,W,EACAA,W;;;KAFNC,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { Card, Tab, Tabs } from 'react-bootstrap';\n//import SSO from \"./SSO\";\nimport LoginForm from './loginform';\nimport { useSelector } from 'react-redux';\n\nfunction LoginTabs() {\n  const site = useSelector((state) => state.site);\n  const user = useSelector((state) => state.user);\n\n  if (!site.authentication) {\n    return 'To be implemented: select a site';\n  }\n\n  return (\n    <Tabs id=\"login-tabs\">\n      {site.authentication.sso.enabled !== 'false' && (\n        <Tab eventKey=\"sso\" title=\"SSO\">\n          <Card body>SSo should be displayed here</Card>\n        </Tab>\n      )}\n      {site.authentication.authenticators\n        .filter((a) => !a.hidden)\n        .map((authenticator) => (\n          <Tab key={authenticator.plugin} eventKey={authenticator.plugin} title={authenticator.title}>\n            <LoginForm plugin={authenticator.plugin} />\n          </Tab>\n        ))}\n    </Tabs>\n  );\n}\n\nexport default LoginTabs;\n"]},"metadata":{},"sourceType":"module"}